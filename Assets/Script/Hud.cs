using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using UnityEngine.WSA;

public class Hud : MonoBehaviour
{
    private static readonly object _lock = new object();
    [Header("슬라이더")]//슬라이더 연결
    public Slider staminaSlider;
    public Slider HpSlider;
    public Slider Radiation_exposure_Slider;
    [Header("스태미나 기능")]//최대 스태미나, 현재 스태미나
    public float maxStamina = 100f;
    public float currentStamina = 100f;
    //달렸을때 스태미나 소모량, 점프하였을때 스태미나 소모량
    public float runStamina = 10f; //초당 5
    public float jumpStamina = 10f; //횟수당 10
    //가만히 있을때 회복되는 스태미나 량
    public float recoveryStamina = 2f; //초당 2
    public float downRecoveryStamina = 10;
    [Header("HP 기능")]//HP 기능 추가
    public float currentHp = 100f;
    public float maxHp = 100f;
    [Header("ESC 기능")]
    public bool GameEscape = false; //현재 esc를 눌렀는지 누르지 않았는지 알려주는 변수
    public GameObject pauseMainCanvas; //일시정지를 누를 시 나오는 ui
    public Button ResumeButton; //이어하기 버튼 변수
    public Button PauseButton; //일시정지 버튼 변수
    public Button EscResumeButton; //esc를 누를때 나오는 퍼즈 버튼

    private static Hud _instance;
    public static Hud Instance
    {
        get
        {
            if (_instance == null)
            {
                lock (_lock)
                {
                    if (_instance == null)
                    {
                        _instance = FindObjectOfType<Hud>();

                        if (_instance == null)
                        {
                            GameObject singletonObject = new GameObject();
                            _instance = singletonObject.AddComponent<Hud>();
                            singletonObject.name = nameof(Hud) + " (Singleton)";
                            DontDestroyOnLoad(singletonObject);
                        }
                    }
                }
            }
            return _instance;
        }
    }

    void Awake()
    {
        if (_instance == null)
        {
            _instance = this;
            DontDestroyOnLoad(this.gameObject);
        }
        else if (_instance != this)
        {
            Destroy(gameObject);
        }
    }
    void Start()
    {
        //시작 시 스태미나와 Hp를 최댓값으로 설정
        currentStamina = maxStamina; 
        currentHp = maxHp;
        //버튼 클릭
        PauseButton.onClick.AddListener(OnPauseButtonClicked);
        ResumeButton.onClick.AddListener(OnResumeButtonCliked);
        EscResumeButton.onClick.AddListener(OnResumeButtonCliked);
    }
    void Update()
    {
        if(Input.GetKeyDown(KeyCode.Escape))
        {
            if(GameEscape)
            {
                ResumeGame();
            }
            else
            {
                PauseGame();
            }
        }
    }
    public void UpdateUI() //ui업데이트 함수
    {
        staminaSlider.value = currentStamina;
        HpSlider.value = currentHp;
        Radiation_exposure_Slider.value = RadiationController.Instance.currentRadiationExposure;
    }
    void OnPauseButtonClicked() //퍼즈 버튼 클릭
    {
        if (!GameEscape)
            PauseGame();
    }
    void OnResumeButtonCliked() //리점 버튼클릭
    {
        if (GameEscape)
            ResumeGame();
    }
    public void PauseGame() //퍼즈시 일어나는 효과
    {
        GameManager.Instance.Pause(); //시간정지
        GameEscape = true;
        pauseMainCanvas.SetActive(true); //버튼 끄기

        PauseButton.gameObject.SetActive(false);
        ResumeButton.gameObject.SetActive(true);
        EscResumeButton.gameObject.SetActive(true);
    }
    public void ResumeGame()
    {
        GameManager.Instance.Resume();
        GameEscape = false;
        pauseMainCanvas.SetActive(false);

        ResumeButton.gameObject.SetActive(false);
        PauseButton.gameObject.SetActive(true);
        EscResumeButton.gameObject.SetActive(false);
    }
}
